//
// OptionsObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OptionsObject: Codable, JSONEncodable, Hashable {

    public var localeCode: String?
    public var isoCode: String?
    public var fullCode: String?
    public var localName: String?
    public var englishName: String?
    public var fullName: String?
    public var factCount: Int?

    public init(localeCode: String? = nil, isoCode: String? = nil, fullCode: String? = nil, localName: String? = nil, englishName: String? = nil, fullName: String? = nil, factCount: Int? = nil) {
        self.localeCode = localeCode
        self.isoCode = isoCode
        self.fullCode = fullCode
        self.localName = localName
        self.englishName = englishName
        self.fullName = fullName
        self.factCount = factCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case localeCode = "locale_code"
        case isoCode = "iso_code"
        case fullCode = "full_code"
        case localName = "local_name"
        case englishName = "english_name"
        case fullName = "full_name"
        case factCount = "fact_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(localeCode, forKey: .localeCode)
        try container.encodeIfPresent(isoCode, forKey: .isoCode)
        try container.encodeIfPresent(fullCode, forKey: .fullCode)
        try container.encodeIfPresent(localName, forKey: .localName)
        try container.encodeIfPresent(englishName, forKey: .englishName)
        try container.encodeIfPresent(fullName, forKey: .fullName)
        try container.encodeIfPresent(factCount, forKey: .factCount)
    }
}

